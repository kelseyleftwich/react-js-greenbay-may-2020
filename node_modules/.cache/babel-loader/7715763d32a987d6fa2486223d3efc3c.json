{"ast":null,"code":"import _toConsumableArray from \"/Users/kelseyleftwich/Documents/react-js-greenbay-may-2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kelseyleftwich/Documents/react-js-greenbay-may-2020/src/components/LineChart.js\";\n\nimport React from 'react';\nexport default (function (_ref) {\n  var data = _ref.data,\n      width = _ref.width,\n      height = _ref.height,\n      precision = _ref.precision;\n  var FONT_SIZE = width / 50;\n  var maximumXFromData = Math.max.apply(Math, _toConsumableArray(data.map(function (e) {\n    return e.x;\n  })));\n  var maximumYFromData = Math.max.apply(Math, _toConsumableArray(data.map(function (e) {\n    return e.y;\n  })));\n  var digits = parseFloat(maximumYFromData.toString()).toFixed(precision).length + 1;\n  var padding = (FONT_SIZE + digits) * 3;\n  var chartWidth = width - padding * 2;\n  var chartHeight = height - padding * 2;\n  var points = data.map(function (element) {\n    var x = element.x / maximumXFromData * chartWidth + padding;\n    var y = chartHeight - element.y / maximumYFromData * chartHeight + padding;\n    return \"\".concat(x, \",\").concat(y);\n  }).join(' ');\n\n  var Axis = function Axis(_ref2) {\n    var points = _ref2.points;\n    return /*#__PURE__*/React.createElement(\"polyline\", {\n      fill: \"none\",\n      stroke: \"#ccc\",\n      strokeWidth: \".5\",\n      points: points,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var XAxis = function XAxis() {\n    return /*#__PURE__*/React.createElement(Axis, {\n      points: \"\".concat(padding, \",\").concat(height - padding, \" \").concat(width - padding, \",\").concat(height - padding),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var YAxis = function YAxis() {\n    return /*#__PURE__*/React.createElement(Axis, {\n      points: \"\".concat(padding, \",\").concat(padding, \" \").concat(padding, \",\").concat(height - padding),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: \"0 0 \".concat(width, \" \").concat(height),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/kelseyleftwich/Documents/react-js-greenbay-may-2020/src/components/LineChart.js"],"names":["React","data","width","height","precision","FONT_SIZE","maximumXFromData","Math","max","map","e","x","maximumYFromData","y","digits","parseFloat","toString","toFixed","length","padding","chartWidth","chartHeight","points","element","join","Axis","XAxis","YAxis"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,gBAAe,gBAAwC;AAAA,MAArCC,IAAqC,QAArCA,IAAqC;AAAA,MAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,MAAxBC,MAAwB,QAAxBA,MAAwB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACrD,MAAMC,SAAS,GAAGH,KAAK,GAAG,EAA1B;AACA,MAAMI,gBAAgB,GAAGC,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQN,IAAI,CAACQ,GAAL,CAAS,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACC,CAAT;AAAA,GAAT,CAAR,EAA7B;AACA,MAAMC,gBAAgB,GAAGL,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQN,IAAI,CAACQ,GAAL,CAAS,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACG,CAAT;AAAA,GAAT,CAAR,EAA7B;AAEA,MAAMC,MAAM,GACVC,UAAU,CAACH,gBAAgB,CAACI,QAAjB,EAAD,CAAV,CAAwCC,OAAxC,CAAgDb,SAAhD,EAA2Dc,MAA3D,GAAoE,CADtE;AAGA,MAAMC,OAAO,GAAG,CAACd,SAAS,GAAGS,MAAb,IAAuB,CAAvC;AACA,MAAMM,UAAU,GAAGlB,KAAK,GAAGiB,OAAO,GAAG,CAArC;AACA,MAAME,WAAW,GAAGlB,MAAM,GAAGgB,OAAO,GAAG,CAAvC;AAEA,MAAMG,MAAM,GAAGrB,IAAI,CAChBQ,GADY,CACR,UAACc,OAAD,EAAa;AAChB,QAAMZ,CAAC,GAAIY,OAAO,CAACZ,CAAR,GAAYL,gBAAb,GAAiCc,UAAjC,GAA8CD,OAAxD;AACA,QAAMN,CAAC,GACLQ,WAAW,GAAIE,OAAO,CAACV,CAAR,GAAYD,gBAAb,GAAiCS,WAA/C,GAA6DF,OAD/D;AAEA,qBAAUR,CAAV,cAAeE,CAAf;AACD,GANY,EAOZW,IAPY,CAOP,GAPO,CAAf;;AASA,MAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,QAAGH,MAAH,SAAGA,MAAH;AAAA,wBACX;AAAU,MAAA,IAAI,EAAC,MAAf;AAAsB,MAAA,MAAM,EAAC,MAA7B;AAAoC,MAAA,WAAW,EAAC,IAAhD;AAAqD,MAAA,MAAM,EAAEA,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW;AAAA,GAAb;;AAIA,MAAMI,KAAK,GAAG,SAARA,KAAQ;AAAA,wBACZ,oBAAC,IAAD;AACE,MAAA,MAAM,YAAKP,OAAL,cAAgBhB,MAAM,GAAGgB,OAAzB,cAAoCjB,KAAK,GAAGiB,OAA5C,cACJhB,MAAM,GAAGgB,OADL,CADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADY;AAAA,GAAd;;AAQA,MAAMQ,KAAK,GAAG,SAARA,KAAQ;AAAA,wBACZ,oBAAC,IAAD;AAAM,MAAA,MAAM,YAAKR,OAAL,cAAgBA,OAAhB,cAA2BA,OAA3B,cAAsChB,MAAM,GAAGgB,OAA/C,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADY;AAAA,GAAd;;AAIA,sBACE;AAAK,IAAA,OAAO,gBAASjB,KAAT,cAAkBC,MAAlB,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA3CD","sourcesContent":["import React from 'react';\n\nexport default ({ data, width, height, precision }) => {\n  const FONT_SIZE = width / 50;\n  const maximumXFromData = Math.max(...data.map((e) => e.x));\n  const maximumYFromData = Math.max(...data.map((e) => e.y));\n\n  const digits =\n    parseFloat(maximumYFromData.toString()).toFixed(precision).length + 1;\n\n  const padding = (FONT_SIZE + digits) * 3;\n  const chartWidth = width - padding * 2;\n  const chartHeight = height - padding * 2;\n\n  const points = data\n    .map((element) => {\n      const x = (element.x / maximumXFromData) * chartWidth + padding;\n      const y =\n        chartHeight - (element.y / maximumYFromData) * chartHeight + padding;\n      return `${x},${y}`;\n    })\n    .join(' ');\n\n  const Axis = ({ points }) => (\n    <polyline fill=\"none\" stroke=\"#ccc\" strokeWidth=\".5\" points={points} />\n  );\n\n  const XAxis = () => (\n    <Axis\n      points={`${padding},${height - padding} ${width - padding},${\n        height - padding\n      }`}\n    />\n  );\n\n  const YAxis = () => (\n    <Axis points={`${padding},${padding} ${padding},${height - padding}`} />\n  );\n\n  return (\n    <svg viewBox={`0 0 ${width} ${height}`}>\n      <XAxis />\n      <YAxis />\n    </svg>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}